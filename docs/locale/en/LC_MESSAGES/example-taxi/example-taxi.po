# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Qing Yu
# This file is distributed under the same license as the TransBigData
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: TransBigData 0.3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-07 17:43+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../source/example-taxi/example-taxi.rst:2
msgid "出租车数据处理"
msgstr ""

#: ../../source/example-taxi/example-taxi.rst:4
#, python-format
msgid ""
"这个案例的Jupyter notebook: `点击这里 "
"<https://github.com/ni1o1/transbigdata/blob/main/example/Example%201-Taxi%20GPS%20data%20processing.ipynb>`__."
msgstr ""

#: ../../source/example-taxi/example-taxi.rst:5
#, python-format
msgid ""
"可以点击 `这个链接 "
"<https://mybinder.org/v2/gh/ni1o1/transbigdata/d7d6fa33ff16440ba1698b10dd3cf3f76ff00abd?urlpath=lab%2Ftree%2Fexample%2FExample%201-Taxi%20GPS%20data%20processing.ipynb>`__"
" 在线编辑器中尝试"
msgstr ""

#: ../../source/example-taxi/example-taxi.rst:6
msgid "使用示例中的样例数据集在github仓库中，链接为：https://github.com/ni1o1/transbigdata/tree/main/example"
msgstr ""

#: ../../source/example-taxi/example-taxi.rst:7
msgid "下面我们介绍如何使用TransBigData包，调用其中的函数实现对出租车GPS数据的快速处理。"
msgstr ""

#: ../../source/example-taxi/example-taxi.rst:8
msgid "首先我们引入TransBigData包，并读取数据:"
msgstr ""

#: ../../source/example-taxi/example-taxi.rst:174
msgid "数据预处理"
msgstr ""

#: ../../source/example-taxi/example-taxi.rst:176
msgid "TransBigData包也集成了数据预处理的常用方法。其中，tbd.clean_outofshape方法输入数据和研究范围区域信息，筛选剔除研究范围外的数据。而tbd.clean_taxi_status方法则可以剔除的载客状态瞬间变化的记录。在使用预处理的方法时，需要传入相应的列，代码如下："
msgstr ""

#: ../../source/example-taxi/example-taxi.rst:187
msgid "数据栅格化"
msgstr ""

#: ../../source/example-taxi/example-taxi.rst:189
msgid "以栅格形式表达数据分布是最基本的表达方法。GPS数据经过栅格化后，每个数据点都含有对应的栅格信息，采用栅格表达数据的分布时，其表示的分布情况与真实情况接近。如果要使用TransBigData工具进行栅格划分，首先需要确定栅格化的参数（可以理解为定义了一个栅格坐标系），参数可以帮助我们快速进行栅格化:"
msgstr ""

#: ../../source/example-taxi/example-taxi.rst:199
msgid "(113.6, 22.4, 0.004872390756896538, 0.004496605206422906)"
msgstr ""

#: ../../source/example-taxi/example-taxi.rst:203
msgid "取得栅格化参数后，将GPS对应至栅格，由LONCOL与LATCOL两列共同指定一个栅格:"
msgstr ""

#: ../../source/example-taxi/example-taxi.rst:210
msgid "统计每个栅格的数据量:"
msgstr ""

#: ../../source/example-taxi/example-taxi.rst:217
msgid "生成栅格的地理图形，并将它转化为GeoDataFrame:"
msgstr ""

#: ../../source/example-taxi/example-taxi.rst:228
msgid "绘制栅格测试是否成功:"
msgstr ""

#: ../../source/example-taxi/example-taxi.rst:241
msgid "出行OD提取与集计"
msgstr ""

#: ../../source/example-taxi/example-taxi.rst:243
msgid "使用tbd.taxigps_to_od方法，传入对应的列名，即可提取出行OD:"
msgstr ""

#: ../../source/example-taxi/example-taxi.rst:413
msgid "对提取出的OD进行OD的栅格集计,并生成GeoDataFrame"
msgstr ""

#: ../../source/example-taxi/example-taxi.rst:427
msgid "出行OD小区集计"
msgstr ""

#: ../../source/example-taxi/example-taxi.rst:429
msgid "TransBigData包也提供了将OD直接集计到小区的方法"
msgstr ""

#: ../../source/example-taxi/example-taxi.rst:457
msgid "基于matplotlib的地图绘制"
msgstr ""

#: ../../source/example-taxi/example-taxi.rst:459
msgid ""
"tbd中提供了地图底图加载和比例尺指北针的功能。使用这个方法之前首先需要设置mapboxtoken和底图存放位置，详情看：\\ `这个链接 "
"<https://transbigdata.readthedocs.io/zh_CN/latest/plot_map.html>`__\\ "
"。plot_map方法添加地图底图，plotscale添加比例尺和指北针:"
msgstr ""

#: ../../source/example-taxi/example-taxi.rst:492
msgid "出租车轨迹的提取"
msgstr ""

#: ../../source/example-taxi/example-taxi.rst:494
msgid "使用tbd.taxigps_traj_point方法，输入数据和OD数据，可以提取出轨迹点"
msgstr ""

#: ../../source/example-taxi/example-taxi.rst:880
msgid "对轨迹点生成载客与空载的轨迹"
msgstr ""

#: ../../source/example-taxi/example-taxi.rst:901
msgid "轨迹可视化"
msgstr ""

#: ../../source/example-taxi/example-taxi.rst:903
msgid "TransBigData包也依托于kepler.gl提供的可视化插件提供了一键数据整理与可视化的方法"
msgstr ""

#: ../../source/example-taxi/example-taxi.rst:904
msgid "使用此功能请先安装python的keplergl包"
msgstr ""

#: ../../source/example-taxi/example-taxi.rst:911
msgid "将轨迹数据进行可视化："
msgstr ""

