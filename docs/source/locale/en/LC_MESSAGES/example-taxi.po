# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Qing Yu
# This file is distributed under the same license as the TransBigData
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: TransBigData 0.2.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-29 23:07+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.1\n"

#: ../example-taxi/example-taxi.rst:2
msgid "出租车数据处理"
msgstr "Taxi GPS data processing"

#: ../example-taxi/example-taxi.rst:4
msgid "使用示例中的样例数据集在github仓库中，链接为：https://github.com/ni1o1/transbigdata/tree/main/example"
msgstr "The sample dataset from the usage example is in the github repository at the following link: https://github.com/ni1o1/transbigdata/tree/main/example"

#: ../example-taxi/example-taxi.rst:5
msgid "下面我们介绍如何使用TransBigData包，调用其中的函数实现对出租车GPS数据的快速处理。"
msgstr "In this example, we will introduce how to use the TransBigData package to efficiently process Taxi GPS data."

#: ../example-taxi/example-taxi.rst:6
msgid "首先我们引入TransBigData包，并读取数据:"
msgstr "Firstly, import the TransBigData and read the data using pandas"

#: ../example-taxi/example-taxi.rst:172
msgid "数据预处理"
msgstr "Data pre-processing"

#: ../example-taxi/example-taxi.rst:174
msgid "TransBigData包也集成了数据预处理的常用方法。其中，tbd.clean_outofshape方法输入数据和研究范围区域信息，筛选剔除研究范围外的数据。而tbd.clean_taxi_status方法则可以剔除的载客状态瞬间变化的记录。在使用预处理的方法时，需要传入相应的列，代码如下："
msgstr "TransBigData integrates several common methods for data pre-processing. Using the `tbd.clean_outofshape` method, given the data and the GeoDataFrame of the study area, it can delete the data outside the study area. The `tbd.clean_taxi_status` method can filters out the data with instantaneous changes in passenger status(OpenStatus). When using the preprocessing method, the corresponding column names need to be passed in as parameters："

#: ../example-taxi/example-taxi.rst:185
msgid "数据栅格化"
msgstr "Data Gridding"

#: ../example-taxi/example-taxi.rst:187
msgid "以栅格形式表达数据分布是最基本的表达方法。GPS数据经过栅格化后，每个数据点都含有对应的栅格信息，采用栅格表达数据的分布时，其表示的分布情况与真实情况接近。如果要使用TransBigData工具进行栅格划分，首先需要确定栅格化的参数（可以理解为定义了一个栅格坐标系），参数可以帮助我们快速进行栅格化:"
msgstr "The most basic way to express the data distribution is in the form of geograpic grids; after the data gridding, each GPS data point is mapped to the corresponding grid. For data gridding, you need to determine the gridding parameters at first(which can be interpreted as defining a grid coordinate system):"

#: ../example-taxi/example-taxi.rst:197
msgid "(113.6, 22.4, 0.004872390756896538, 0.004496605206422906)"
msgstr "(113.6, 22.4, 0.004872390756896538, 0.004496605206422906)"

#: ../example-taxi/example-taxi.rst:201
msgid "取得栅格化参数后，将GPS对应至栅格，由LONCOL与LATCOL两列共同指定一个栅格:"
msgstr "After obtaining the gridding parameters, the next step is to map the GPS is to their corresponding grids. Using the `tbd.GPS_to_grids`, it will generate the LONCOL column and the LATCOL column. The two columns together can specify a grid:"

#: ../example-taxi/example-taxi.rst:208
msgid "统计每个栅格的数据量:"
msgstr "Count the amount of data in each grids:"

#: ../example-taxi/example-taxi.rst:215
msgid "生成栅格的地理图形，并将它转化为GeoDataFrame:"
msgstr "Generate the geometry of the grids and transform it into a GeoDataFrame:"

#: ../example-taxi/example-taxi.rst:226
msgid "绘制栅格测试是否成功:"
msgstr "Plot the generated grids:"

#: ../example-taxi/example-taxi.rst:239
msgid "出行OD提取与集计"
msgstr "Origin-destination(OD) Extraction and aggregate taxi trips"

#: ../example-taxi/example-taxi.rst:241
msgid "使用tbd.taxigps_to_od方法，传入对应的列名，即可提取出行OD:"
msgstr "Use the `tbd.taxigps_to_od` method and pass in the corresponding column name to extract the taxi trip OD:"

#: ../example-taxi/example-taxi.rst:411
msgid "对提取出的OD进行OD的栅格集计,并生成GeoDataFrame"
msgstr "Aggregate the extracted OD and generate LineString GeoDataFrame"

#: ../example-taxi/example-taxi.rst:425
msgid "出行OD小区集计"
msgstr "Aggregate OD into polygons"

#: ../example-taxi/example-taxi.rst:427
msgid "TransBigData包也提供了将OD直接集计到小区的方法"
msgstr "`TransBigData` also provides the method for aggregating OD into polygons"

#: ../example-taxi/example-taxi.rst:455
msgid "基于matplotlib的地图绘制"
msgstr "Matplotlib-based map drawing"

#: ../example-taxi/example-taxi.rst:457
msgid ""
"tbd中提供了地图底图加载和比例尺指北针的功能。使用这个方法之前首先需要设置mapboxtoken和底图存放位置，详情看：\\ `这个链接 "
"<https://transbigdata.readthedocs.io/zh_CN/latest/plot_map.html>`__\\ "
"。plot_map方法添加地图底图，plotscale添加比例尺和指北针:"
msgstr "TransBigData also provide basemap loading in matplotlib. Before using this method, you need to set your mapboxtoken and the storage location for the basemap, see: \\ `this link "
"<https://transbigdata.readthedocs.io/en/latest/plot_map.html>`__\\ "
"。`tbd.plot_map` to add basemap and `tbd.plotscale` to add scale and compass:"

#: ../example-taxi/example-taxi.rst:490
msgid "出租车轨迹的提取"
msgstr "Extraction of taxi trajectpries"

#: ../example-taxi/example-taxi.rst:492
msgid "使用tbd.taxigps_traj_point方法，输入数据和OD数据，可以提取出轨迹点"
msgstr "Using `tbd.taxigps_traj_point` method, inputing GPS data and OD data, trajectory points can be extracted"

#: ../example-taxi/example-taxi.rst:878
msgid "对轨迹点生成载客与空载的轨迹"
msgstr "Generate delivery and idle trajectories from trajectory points"

#: ../example-taxi/example-taxi.rst:899
msgid "轨迹可视化"
msgstr "Trajectories visualization"

#: ../example-taxi/example-taxi.rst:901
msgid "TransBigData包也依托于kepler.gl提供的可视化插件提供了一键数据整理与可视化的方法"
msgstr "Built-in visualization capabilities of `TransBigData` leverage the visualization package `keplergl` to interactively visualize data on Jupyter notebook with simple code."

#: ../example-taxi/example-taxi.rst:902
msgid "使用此功能请先安装python的keplergl包"
msgstr "To use this method, please install the keplergl package for python"

#: ../example-taxi/example-taxi.rst:909
msgid "将轨迹数据进行可视化："
msgstr "Visualization of trajectory data:"

