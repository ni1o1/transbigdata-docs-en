# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Qing Yu
# This file is distributed under the same license as the TransBigData
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: TransBigData 0.2.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-29 23:07+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.1\n"

#: ../traj.rst:6
msgid "轨迹数据处理"
msgstr "Trajectory Processing"

#: ../traj.rst:9
msgid "轨迹线型生成"
msgstr "Trajectory GeoDataFrame"

#: ../traj.rst:13
msgid "输入轨迹点，生成轨迹线型的GeoDataFrame"
msgstr "Input the trajectory points. The output is the GeoDataFrame with trajectory geometry"

#: ../traj.rst:15 ../traj.rst:33 ../traj.rst:48
msgid "**输入**"
msgstr "**Input**"

#: ../traj.rst:17
msgid "traj_points"
msgstr "traj_points"

msgid "DataFrame"
msgstr "DataFrame"

#: ../traj.rst:18
msgid "轨迹点数据"
msgstr "Trajectory data"

#: ../traj.rst:19 ../traj.rst:52
msgid "col"
msgstr "col"

msgid "List"
msgstr "List"

#: ../traj.rst:20
msgid "列名，按[经度,纬度,轨迹编号]的顺序"
msgstr "The column name, in the sequence of [lon, lat, ID]"

#: ../traj.rst:22
msgid "timecol"
msgstr "timecol"

msgid "str"
msgstr "str"

#: ../traj.rst:22
msgid "可选，时间列的列名，如果给了则输出带有[经度,纬度,高度,时间]的geojson，可放入kepler中可视化轨迹"
msgstr "Optional. If given, then output the GeoJSON file with the column of [longitude, latitude, altitude, time]. The GeoJSON can be uploaded to Kepler for visualization"

#: ../traj.rst:24 ../traj.rst:57
msgid "**输出**"
msgstr "**Output**"

#: ../traj.rst:27
msgid "traj"
msgstr "traj"

msgid "GeoDataFrame或json"
msgstr "GeoDataFrame or json"

#: ../traj.rst:27
msgid "生成的轨迹数据，如果timecol没定义则为GeoDataFrame，否则为json"
msgstr "The output trajectory data. If no timecol is given, the type will be json"

#: ../traj.rst:31
msgid "输入json数据，存储为文件。这个方法主要是解决numpy数值型无法兼容json包报错的问题"
msgstr "Input the json data and save it as a file. This method is suitable for sovling the problem that numpy cannot be compatiable with json package."

#: ../traj.rst:35 ../traj.rst:50
msgid "data"
msgstr "data"

msgid "json"
msgstr "json"

#: ../traj.rst:36
msgid "要储存的json数据"
msgstr "The json data to be saved"

#: ../traj.rst:39
msgid "path"
msgstr "path"

#: ../traj.rst:38
msgid "保存的路径"
msgstr "The storage path"

#: ../traj.rst:42
msgid "轨迹增密"
msgstr "Trajectory densification"

#: ../traj.rst:46
msgid "轨迹点增密，确保每隔timegap秒会有一个轨迹点"
msgstr "Trajectory densification, ensure that there is a trajectory point each `timegap` seconds"

#: ../traj.rst:51
msgid "数据"
msgstr "Data"

#: ../traj.rst:53
msgid "列名，按[车辆ID,时间,经度,纬度]的顺序"
msgstr "The column name, in the sequence of [Vehicleid, Time, lng, lat]"

#: ../traj.rst:55
msgid "timegap"
msgstr "timegap"

msgid "number"
msgstr "number"

#: ../traj.rst:55
msgid "单位为秒，每隔多长时间插入一个轨迹点"
msgstr "The sampling interval (second)"

#: ../traj.rst:60
msgid "data1"
msgstr "data1"

#: ../traj.rst:60
msgid "处理后的数据"
msgstr "The processed data"

#: ../traj.rst:62
msgid "使用方法"
msgstr "Code example"

#: ../traj.rst:98
msgid "进行轨迹增密，设置15秒一条数据::"
msgstr "Trajectory densification, set the sampling interval to 15 seconds::"

#: ../traj.rst:127
msgid "增密后的效果"
msgstr "The results"

